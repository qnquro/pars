# categorizer.py
# файл отвечающий за категоризацию новостей. мы решили отказаться от того, чтобы вытаскивать тему с сайта и стали сами делать категорию
CATEGORY_KEYWORDS = {
    "политика": ["политика", "правительство", "президент", "выборы", "госдума", "закон", "парламент", "король"],
    "экономика": ["экономика", "рынок", "инфляция", "бюджет", "налоги", "ВВП", "компании", "бизнес", "дефляция", "кризис"],
    "финансы": ["финансы", "акции", "облигации", "биржа", "инвестиции", "рубль", "доллар", "евро", "счёт", "брокер"],
    "технологии": ["технологии", "гаджеты", "IT", "интернет", "соцсети", "искусственный интеллект", "роботы", "LLM"],
    "спорт": ["спорт", "футбол", "хоккей", "олимпиада", "чемпионат", "матч", "соревнования"],
    "культура": ["культура", "кино", "музыка", "театр", "искусство", "выставка", "концерт", "опера"],
    "наука": ["наука", "исследование", "открытие", "ученые", "космос", "медицина", "биология", "астроном", "статистика"],
    "происшествия": ["происшествие", "авария", "пожар", "преступление", "ДТП", "катастрофа", "техногенная", "природная", " погиб", "погибли"],
    "здоровье": ["здоровье", "медицина", "болезнь", "врачи", "больница", "вирус", "вакцина", "пандемия", "штамп", "эпидемия"],
    "недвижимость": ["недвижимость", "квартира", "ипотека", "строительство", "жилье", "риелтор", "застройщик", "вторичка"],
    "авто": ["авто", "автомобили", "машины", "дороги", "пробки", "ДТП", "гибдд", "автомобиль", "утильсбор"],
    "образование": ["образование", "школа", "университет", "студенты", "экзамены", "учителя", "колледж", "техникум", "ЕГЭ", "ОГЭ", "ВПР"],
}

# функция отвечающая за выбор категории новости. сюда нужно закидывать заголовок и текст новости. он по наибольшему совпадению слов выбирает категорию
def categorize_article(title, description):
    text = (title + " " + (description or "")).lower()

    best_category = "разное"
    max_matches = 0

    for category, keywords in CATEGORY_KEYWORDS.items():
        matches = sum(1 for keyword in keywords if keyword.lower() in text)
        if matches > max_matches:
            max_matches = matches
            best_category = category

    return best_category